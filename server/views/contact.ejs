<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CapybaraComments - Contact</title>
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Capybara Downloader - Download youtube videos and audios and etc." />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="apple-touch-icon" sizes="180x180" href="favicon_io/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="favicon_io/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="favicon_io/favicon-16x16.png">
    <link rel="manifest" href="favicon_io/site.webmanifest">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <style nonce="<%= nonce %>">
        @import url('https://fonts.googleapis.com/css2?family=Leckerli+One&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&family=Jua&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Leckerli+One&display=swap');

        :root {
            --var1: -220px;
        }

        body {
            overflow-x: hidden;
            background-color: #1E1E1E;
        }

        .message-pop {
            position: fixed;
            z-index: 1000;
            background-color: orange;
            min-width: 300px;
            top: 0%;
            left: 50%;
            transform: translate(-50%, 10%);
            padding: 10px;
            padding-top: 0%;
            border: 5px solid #000000;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            word-break: break-all;
        }

        .cross-btn {
            font-size: large;
            background-color: red;
            font-weight: 900;
            border-bottom-left-radius: 30px;
            border-bottom-right-radius: 30px;
        }

        .cross-btn-container {
            width: 100%;
            display: flex;
            justify-content: end;
            align-items: end;
        }

        .message-pop .message {
            color: black;
            font-size: medium;
            word-wrap: break-word;
        }

        .message-pop-inner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: 2px;
            color: black;
            font-size: x-large;
        }

        .dis-none {
            display: none !important;
        }

        main {
            width: 100vw;
            height: 100vh;
            background-color: transparent;
        }

        nav {
            width: 350px;
            height: 100%;
            background-color: #0c0c0c;
        }

        /* Nav */

        .logo {
            font-family: Leckerli One;
            color: white;
            font-size: large;
        }

        .navbar-list {
            list-style: none;
            padding-left: 0%;
        }

        .navbar-list li {
            padding: 0px 0px 25px 0px;
        }

        a {
            text-decoration: none;
            color: white;
            font-family: jua;
            font-size: large;
        }

        a:hover {
            color: orange;
        }

        .logout-btn {
            gap: 5px;
            color: orange;
        }

        .logout-btn button {
            color: orange;
            background-color: transparent;
            border: none;
            font-family: Jua;
            font-size: large;
            padding: 0;
        }

        .material-symbols-outlined {
            font-variation-settings:
                'FILL' 0,
                'wght' 400,
                'GRAD' 0,
                'opsz' 24
        }

        .color-orange {
            color: orange;
        }

        /* Section  */

        section {
            width: 100%;
            height: 100%;
            background-color: transparent;
            font-family: Jua;
            gap: 30px;
        }

        section .contact-tag {
            background-color: orange;
            padding: 5px;
            width: 100px;
            color: black;
            font-size: large;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        section .image-container {
            width: 50px;
            background-color: white;
            border-radius: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
        }

        section img {
            width: 100%;
        }

        section .contact-tag-container {
            width: 500px;
            flex-wrap: wrap;
            gap: 15px;
            /* background-color: red; */
            justify-content: space-around;
        }

        section a {
            color: black;
            font-size: x-large;
        }

        section .contact-tag {
            width: 250px;
            display: flex;
            justify-content: start;
            align-items: center;
            border-radius: 30px;
            gap: 10px;
        }
    </style>
</head>

<body>

    <main class="flex-row d-flex justify-content-center align-items-center">
        <nav class="navigation-bar d-flex justify-content-between align-items-center flex-column">
            <div class="logo pt-5">Capybara</div>
            <ul class="navbar-list text-center">
                <li><a href="/home">Home</a></li>
                <li><a href="/profile">Profile</a></li>
                <li><a href="/dashboard">Dashboard</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>
            <div class="logout-btn d-flex justify-content-center align-items-center pb-5">
                <button type="button">Logout</button>
                <span class="material-symbols-outlined">move_item</span>
            </div>
        </nav>
        <section class="d-flex justify-content-center align-items-center flex-row">
            <div class="contact-tag-container d-flex align-items-center ">
                <div class="contact-tag">
                    <div class="image-container">
                        <img src="../icons/github.svg" alt="github-icon">
                    </div>
                    <a href="/github">Github</a>
                </div>
                <div class="contact-tag">
                    <div class="image-container">
                        <img src="../icons/facebook.svg" alt="facebook-icon">
                    </div>
                    <a href="/facebook">Facebook</a>
                </div>
                <div class="contact-tag">
                    <div class="image-container">
                        <img src="../icons/envelope-regular.svg" alt="gmail-logo">
                    </div>
                    <a href="/gmail">Gmail</a>
                </div>
                <div class="contact-tag">
                    <div class="image-container">
                        <img src="../icons/linkedin-in.svg" alt="linkedin">
                    </div>
                    <a href="linkedin">Linkedin</a>
                </div>
                <div class="contact-tag">
                    <div class="image-container">
                        <img src="../icons/instagram.svg" alt="instagram">
                    </div>
                    <a href="instagram">Instagram</a>
                </div>
            </div>
        </section>
    </main>

    <div class="message-pop dis-none">
        <div class="cross-btn-container">
            <button type="button" class="cross-btn">âœ—</button>
        </div>
        <div class="message-pop-inner-container">
            <div class="head">Uh oh!</div>
            <div class="message"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>

    <script nonce="<%= nonce %>">

        const hostURL = 'http://localhost:5000'

        const input = document.querySelector('.capy-input-container input');
        const generate_btn = document.getElementById('generate-btn');
        const copy_btn = document.querySelector('.copy-btn');

        if (copy_btn) {
            copy_btn.onclick = (e) => {
                input.select();
                document.execCommand("copy");
                alert("Copied to clipboard!");
            }
        }


        function addColorClassToAnchor() {
            const anchors = document.querySelectorAll('.navbar-list a');
            const currentUrl = window.location.pathname;

            anchors.forEach(anchor => {
                if (anchor.getAttribute('href') === currentUrl) {
                    anchor.classList.add('color-orange');
                }
            });
        }

        document.addEventListener('DOMContentLoaded', addColorClassToAnchor);


        const message_pop = document.querySelector('.message-pop');
        const cross_btn = document.querySelector('.cross-btn');

        if (cross_btn) {
            cross_btn.addEventListener('click', (e) => {
                if (message_pop) { message_pop.classList.add('dis-none') }
            });
        }

        function show_message_pop(bool, msg = '') {
            if (bool) {
                message_pop.classList.remove('dis-none');
                const message = document.querySelector('.message');
                message.textContent = msg;
            }
            else {
                message_pop.classList.add('dis-none');
            }
        }

        async function getAccessKey() {
            try {
                const parameter = {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    }
                }

                await fetch(`${hostURL}/api/v1/user/generateAccessKey`, parameter)
                    .then((res) => res.json())
                    .then((res) => {
                        console.log(res);
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            }
                            else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }

                        const message_head = document.querySelector('.head');
                        if (message_head) {
                            message_head.textContent = 'AccessKey!';
                        }
                        show_message_pop(true, res.data.accessKey);

                    }).catch((error) => {
                        show_message_pop(true, 'Error on reading response from server.');
                        console.log('generate accesskey Latter:', error);
                    })

            } catch (error) {
                show_message_pop(true, 'Error on sending request for News Latter.');
                console.log('generating accesskey:', error);
            }
        }

        // Logout-btn

        const logout_btn = document.querySelector('.logout-btn button');
        
        if (logout_btn) {
            logout_btn.onclick = async (e) => {
                await logout();
            }
        }

        async function logout() {
            try {
                const parameter = {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    }
                }

                await fetch(`${hostURL}/api/v1/user/signout`, parameter)
                    .then((res) => res.json())
                    .then((res) => {
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            } else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }

                        location.href = '/'
                    })
                    .catch((error) => {
                        show_message_pop(true, "Error on reading response from server.");
                    })
            } catch (error) {
                show_message_pop(
                    true,
                    "Error on sending request to logout."
                );
            }
        }

    </script>
</body>

</html>