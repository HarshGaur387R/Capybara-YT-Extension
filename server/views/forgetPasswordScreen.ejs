<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CapybaraComments - forget-password</title>
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Capybara Downloader - Download youtube videos and audios and etc." />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="apple-touch-icon" sizes="180x180" href="favicon_io/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="favicon_io/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="favicon_io/favicon-16x16.png">
    <link rel="manifest" href="favicon_io/site.webmanifest">

    <style nonce="<%= nonce %>">
        @import url('https://fonts.googleapis.com/css2?family=Leckerli+One&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&family=Jua&display=swap');

        body {
            overflow-x: hidden;
            background-color: #1E1E1E;
            font-family: Jua;
        }

        .fp-container {
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .fp-container h1 {
            color: orange;
            font-family: Jua;
        }

        .form-input-container {
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .fp-form {
            width: 400px;
            gap: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .fp-form p {
            color: white;
        }

        .form-input-container label {
            font-size: x-large;
            width: 100%;
            color: white;
        }

        .form-input-container input {
            background-color: white;
            font-family: inter;
            font-size: larger;
            padding: 10px;
            border: 4px solid orange;
            box-shadow: 0px 0px 0px 4px black;
            width: 100%;
        }

        .forget-password {
            width: 100%;
            text-align: end;
        }

        .forget-password a {
            color: orange;
            text-decoration: none;
            font-size: small;
        }

        .fp-form-btn-container {
            width: 100%;
        }


        .fp-form-btn-container button {
            width: 100%;
            padding: 10px;
            border-radius: 30px;
            font-size: x-large;
            border: 2px solid black;
            box-shadow: 3px 4px 0px 0px black;
        }

        .fp-form-btn-container button:hover {
            background-color: rgb(199, 199, 199);
        }

        .form-link {
            font-size: small;
            color: orange;
        }

        .message-pop {
            position: fixed;
            z-index: 1000;
            background-color: orange;
            min-width: 300px;
            top: 0%;
            left: 50%;
            transform: translate(-50%, 10%);
            padding: 10px;
            padding-top: 0%;
            border: 5px solid #000000;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .cross-btn {
            font-size: large;
            background-color: red;
            font-weight: 900;
            border-bottom-left-radius: 30px;
            border-bottom-right-radius: 30px;
        }

        .cross-btn-container {
            width: 100%;
            display: flex;
            justify-content: end;
            align-items: end;
        }

        .message-pop .message {
            color: black;
            font-size: medium;
            word-wrap: break-word;
        }

        .message-pop-inner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: 2px;
            color: black;
            font-size: x-large;
        }

        .dis-none {
            display: none !important;
        }

        .link-btn {
            background-color: transparent;
            color: orange;
            padding: 0;
            border: 0px solid black;
        }

        .loading-window {
            position: fixed;
            z-index: 100000;
            background-color: #1E1E1E;
            width: 100vw;
            height: 100vh;
            justify-content: center;
            text-align: center;
            align-items: center;
            flex-direction: column;
            display: flex;
            gap: 20px;
            top: 0%;
            left: 0%;
        }

        .loading-window-heading {
            font-family: Jua;
            color: orange;
        }

        .loading-window-img-container {
            width: 400px;

        }

        .loading-window-img-container img {
            width: 100%;
        }

        .loader {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            display: inline-block;
            position: relative;
            border: 3px solid;
            border-color: #FFF #FFF transparent transparent;
            box-sizing: border-box;
            animation: rotation 1s linear infinite;
        }

        .loader::after,
        .loader::before {
            content: '';
            box-sizing: border-box;
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
            margin: auto;
            border: 3px solid;
            border-color: transparent transparent orange orange;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            box-sizing: border-box;
            animation: rotationBack 0.5s linear infinite;
            transform-origin: center center;
        }

        .loader::before {
            width: 32px;
            height: 32px;
            border-color: #FFF #FFF transparent transparent;
            animation: rotation 1.5s linear infinite;
        }

        @keyframes rotation {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        @keyframes rotationBack {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(-360deg);
            }
        }

        @media screen and (max-width: 450px) {
            .fp-form{
                width: 100%;
            }
        }
    </style>
</head>

<body>

    <div class="container fp-container">
        <h1 class="fp-head">Forget Password?</h1>

        <form class="fp-form" action="">
            <p class="fp-message text-center">Enter your email and new password, We'll send you a verification code at
                your email.
            </p>
            <div class="form-input-container">
                <input required type="email" class="text-center" name="fp-email-input" id="fp-email-input"
                    placeholder="example@mail.com">
            </div>
            <div class="form-input-container">
                <input required type="password" class="text-center" name="fp-password-input" id="fp-password-input"
                    placeholder="New Password">
            </div>
            <div class="form-input-container">
                <input required type="password" class="text-center" name="fp-confirm-password-input"
                    id="fp-confirm-password-input" placeholder="Confirm Password">
            </div>
            <div class="fp-form-btn-container">
                <button type="submit" id="fp-form-btn">Send</button>
            </div>
        </form>
    </div>

    <div class="message-pop dis-none">
        <div class="cross-btn-container">
            <button type="button" class="cross-btn">âœ—</button>
        </div>
        <div class="message-pop-inner-container">
            <div class="head">Uh oh!</div>
            <div class="message"></div>
        </div>
    </div>

    <div class="loading-window dis-none">
        <div class="loading-window-img-container">
            <span class="loader"></span>
        </div>
        <div class="loading-window-heading">
            <h1>Purr Purr Loading...</h1>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous">
        </script>

    <script nonce="<%= nonce %>">
        const hostURL = 'http://localhost:5000'
        const message_pop = document.querySelector('.message-pop');
        const cross_btn = document.querySelector('.cross-btn');

        function show_loading_window(bool) {
            const loading_window = document.querySelector('.loading-window');
            if (bool) {
                loading_window.classList.remove('dis-none');
            }
            else {
                loading_window.classList.add('dis-none');
            }
        }

        function show_message_pop(bool, msg = '') {
            if (bool) {
                message_pop.classList.remove('dis-none');
                const message = document.querySelector('.message');
                message.textContent = msg;
            }
            else {
                message_pop.classList.add('dis-none');
            }
        }

        if (cross_btn) {
            cross_btn.addEventListener('click', (e) => {
                if (message_pop) { message_pop.classList.add('dis-none') }
            });
        }

        const fp_form = document.querySelector('.fp-form');

        if (fp_form) {
            fp_form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const email = document.getElementById('fp-email-input').value;
                const new_password = document.getElementById('fp-password-input').value;
                const confirm_password = document.getElementById('fp-confirm-password-input').value;

                await forget_password(email, new_password, confirm_password);
            })
        }

        async function forget_password(email, new_password, confirm_password) {
            if (!email) {
                show_message_pop(true, 'Name is required.')
                return;
            }

            if (!new_password) {
                show_message_pop(true, 'Email not provided. Please enter your email address');
                return;
            }
            else if (!confirm_password) {
                show_message_pop(true, 'Password is not provided. Please enter your password');
                return;
            }

            else if (confirm_password !== new_password) {
                show_message_pop(true, 'Please Enter correct Confirm password.');
                return;
            }

            try {
                show_loading_window(true);

                const parameter = {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        "email": email,
                        "password": new_password,
                    })
                }

                await fetch(`${hostURL}/api/v1/auth/forgetPassword`, parameter)
                    .then((res) => res.json())
                    .then((res) => {
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            }
                            else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }

                        window.location.href = '/verifyEmailToForgetPassword';

                    }).catch((error) => {
                        show_message_pop(true, 'Error on reading response from server.');
                        console.log('forgetPassword:', error);
                    }).finally(() => {
                        show_loading_window(false);
                    });

            } catch (error) {
                show_message_pop(true, 'Error on sending request for forgetPassword.');
                console.log('forgetPassword:', error);
            }

        }

    </script>
</body>

</html>