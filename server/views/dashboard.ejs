<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CapybaraComments - Dashboard</title>
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Capybara Downloader - Download youtube videos and audios and etc." />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="apple-touch-icon" sizes="180x180" href="favicon_io/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="favicon_io/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="favicon_io/favicon-16x16.png">
    <link rel="manifest" href="favicon_io/site.webmanifest">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <style nonce="<%= nonce %>">
        @import url('https://fonts.googleapis.com/css2?family=Leckerli+One&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&family=Jua&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Leckerli+One&display=swap');

        :root {
            --var1: -220px;
            --chart-gap: 30px;
            --chart-box-width: 400px;
            --chart-box-height: 350px;
            --chart-box-border-radius: 20px;
            --meter-level-percentage: 0%;
            --meter-shine-level: 0%;
            --single-bar-size: 20px;
        }

        body {
            overflow-x: hidden;
            background-color: #1E1E1E;
        }

        .message-pop {
            position: fixed;
            z-index: 1000;
            background-color: orange;
            min-width: 300px;
            top: 0%;
            left: 50%;
            transform: translate(-50%, 10%);
            padding: 10px;
            padding-top: 0%;
            border: 5px solid #000000;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            word-break: break-all;
        }

        .cross-btn {
            font-size: large;
            background-color: red;
            font-weight: 900;
            border-bottom-left-radius: 30px;
            border-bottom-right-radius: 30px;
        }

        .cross-btn-container {
            width: 100%;
            display: flex;
            justify-content: end;
            align-items: end;
        }

        .message-pop .message {
            color: black;
            font-size: medium;
            word-wrap: break-word;
        }

        .message-pop-inner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: 2px;
            color: black;
            font-size: x-large;
        }

        .dis-none {
            display: none !important;
        }

        main {
            width: 100vw;
            height: 100vh;
            background-color: transparent;
        }

        .navigation-bar {
            width: 350px;
            height: 100%;
            background-color: #0c0c0c;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-direction: column;
        }


        .responsive-nav-bar-container {
            position: fixed;
            top: 0;
            background-color: orange;
            width: 100%;
            text-align: center;
            padding: 5px;
            display: none !important;
            z-index: 10001;
        }

        .responsive-nav-bar {
            display: flex;
            position: fixed;
            justify-content: space-around;
            align-items: center;
            flex-direction: column;
            background-color: #1E1E1E;
            top: -9000px;
            width: 100%;
            height: 100%;
            display: none !important;
            z-index: 10002;
        }

        .responsive-nav-bar .logo {
            font-size: xx-large;
        }

        /* Nav */

        .logo {
            font-family: Leckerli One;
            color: white;
            font-size: large;
        }

        .navbar-list {
            list-style: none;
            padding-left: 0%;
        }

        .navbar-list li {
            padding: 0px 0px 25px 0px;
        }

        a {
            text-decoration: none;
            color: white;
            font-family: jua;
            font-size: large;
        }

        a:hover {
            color: orange;
        }

        .logout-btn {
            gap: 5px;
            color: orange;
        }

        .logout-btn button {
            color: orange;
            background-color: transparent;
            border: none;
            font-family: Jua;
            font-size: large;
            padding: 0;
        }

        .material-symbols-outlined {
            font-variation-settings:
                'FILL' 0,
                'wght' 400,
                'GRAD' 0,
                'opsz' 24
        }

        .color-orange {
            color: orange;
        }

        /* Section  */

        section {
            width: 100%;
            height: 100%;
            background-color: transparent;
            font-family: Jua;
            gap: 30px;
        }

        .requests-record-container {
            width: 95%;
            height: 100%;
            gap: 30px;
        }

        .download-records-container {
            gap: var(--chart-gap);
        }

        .first-row-charts {
            background: rgb(38, 38, 38);
            background: linear-gradient(343deg, rgba(38, 38, 38, 1) 0%, rgb(74, 74, 74) 100%);
            width: var(--chart-box-width);
            height: var(--chart-box-height);
            border-radius: var(--chart-box-border-radius);
            border: 2px solid black;
            box-shadow: 6px 6px 5px 0px black;
        }

        .download-date-chart-container {
            background: rgb(38, 38, 38);
            background: linear-gradient(343deg, rgba(38, 38, 38, 1) 0%, rgb(74, 74, 74) 100%);
            width: calc(2 * var(--chart-box-width) + var(--chart-gap));
            height: calc(var(--chart-box-height) - 100px);
            border-radius: var(--chart-box-border-radius);
            border: 2px solid black;
            box-shadow: 6px 6px 5px 0px black;
            justify-content: flex-end !important;
        }

        .meter-chart {
            gap: 20px;
        }

        .meter {
            position: relative;
            width: 200px;
            height: 200px;
            background: rgb(209, 129, 0);
            background: linear-gradient(0deg, rgba(209, 129, 0, 1) var(--meter-shine-level), rgb(236, 181, 0) var(--meter-level-percentage), rgba(38, 38, 38, 1) 0%);
            border-radius: 50%;
            border: 3px solid black;
        }

        .meter::after {
            display: flex;
            justify-content: center;
            align-items: center;
            content: attr(meter-level);
            color: white;
            font-size: xx-large;
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            width: 150px;
            height: 150px;
            background: rgb(38, 38, 38);
            background: linear-gradient(343deg, rgba(38, 38, 38, 1) 0%, rgb(74, 74, 74) 100%);
            border: 2px solid orange;
            border-radius: 50%;
            margin: auto;
        }

        .chart-title {
            color: #EC9C00;
            font-family: Jua;
            font-size: x-large;
        }

        .request-details-container {
            width: 100%;
            padding: 15px 0px 0px 20px;
        }

        .request-header {
            color: #EC9C00;
            font-family: Jua;
            font-size: large;
        }

        .request-data-number {
            color: white;
            font-family: Jua;
            font-size: xx-large;
        }

        .data-bars {
            padding: 5px;
            border-radius: var(--chart-box-border-radius);
            border-bottom-left-radius: 0px;
            border-bottom-right-radius: 0px;
            width: 100%;
            gap: 5px;
            overflow: scroll;
        }

        .data-bar-buttons {
            background-color: gray;
            border-radius: var(--chart-box-border-radius);
            border-top-left-radius: 0px;
            border-top-right-radius: 0px;
            /* flex: 10%; */
            width: 100%;
        }

        .data-bar-buttons button {
            background-color: #1E1E1E;
            color: white;
            font-size: x-large;
        }

        .single-bar {
            min-width: var(--single-bar-size);
            background-color: orange;
        }

        .devicesContainer {
            color: white;
            gap: 20px;
        }

        .devicesContainer span {
            color: orange;
        }

        .device-detail-box {
            background-color: rgb(117, 76, 0);
            padding: 10px;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: start;
            flex-direction: column;
        }


        /* SCROLL BAR -------------------------------------------------- */
        /* This applies to all scrollable elements */
        ::-webkit-scrollbar {
            width: 10px;
            /* Width of the vertical scrollbar */
            height: 10px;
            /* Height of the horizontal scrollbar */
        }

        /* Track */
        ::-webkit-scrollbar-track {
            background: gray;
            border-top-right-radius: 20px;
            /* Color of the track */
        }

        /* Handle */
        ::-webkit-scrollbar-thumb {
            background: orange;
            border-top-right-radius: 20px;
            /* Color of the thumb */
        }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #b30000;
            /* Darken the thumb color when you hover over it */
        }

        @media screen and (max-width: 900px) {
            .navigation-bar {
                display: none;
            }

            .responsive-nav-bar-container {
                display: block !important;
            }

            .responsive-nav-bar-container .material-symbols-outlined {
                font-size: xx-large;
            }

            .responsive-nav-bar {
                display: flex !important;
            }

            .requests-record-container {
                margin-top: 50px;
            }
        }

        @media screen and (max-width: 1160px) {
            :root {
                --chart-gap: 30px;
                --chart-box-width: 300px;
            }
        }

        @media screen and (max-width: 940px) {
            .requests-record-container {
                width: 100%;
            }
        }

        @media screen and (max-width: 650px) {
            .requests-record-container {
                height: fit-content;
                padding: 5px;
            }

            .download-records-container {
                flex-wrap: wrap;
                /* height: fit-content; */
            }

            .download-date-chart-container {
                width: 100%;
            }
        }

        @media screen and (max-width: 480px) {
            .first-row-charts {
                width: 100%;
            }
        }
    </style>
</head>

<body>

    <main class="flex-row d-flex justify-content-center align-items-center">
        <nav class="responsive-nav-bar-container">
            <span class="material-symbols-outlined menu-btn-respo">
                menu
            </span>
        </nav>

        <nav class="responsive-nav-bar">
            <div class="logo pt-5">Capybara</div>
            <ul class="navbar-list text-center">
                <li><a href="/home">Home</a></li>
                <li><a href="/profile">Profile</a></li>
                <li><a href="/dashboard">Dashboard</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>
            <div class="logout-btn d-flex justify-content-center align-items-center pb-5">
                <button type="button">Logout</button>
                <span class="material-symbols-outlined">move_item</span>
            </div>
        </nav>

        <nav class="navigation-bar">
            <div class="logo pt-5">Capybara</div>
            <ul class="navbar-list text-center">
                <li><a href="/home">Home</a></li>
                <li><a href="/profile">Profile</a></li>
                <li><a href="/dashboard">Dashboard</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>
            <div class="logout-btn d-flex justify-content-center align-items-center pb-5">
                <button type="button">Logout</button>
                <span class="material-symbols-outlined">move_item</span>
            </div>
        </nav>
        <section class="overflow-auto">
            <div class="requests-record-container d-flex justify-content-center align-items-center flex-column">
                <div class="download-records-container d-flex justify-content-center align-items-center flex-row">
                    <div
                        class="meter-chart first-row-charts d-flex justify-content-center align-items-center flex-column">
                        <div class="meter"></div>
                        <div class="chart-title">Successful Downloads</div>
                    </div>
                    <div
                        class="downloads-detail first-row-charts d-flex justify-content-center align-items-start flex-column">
                        <div class="request-details-container">
                            <div class="request-header">
                                Total requests sent
                            </div>
                            <div id="total_requests_sent" class="request-data-number">
                                0
                            </div>
                        </div>

                        <div class="request-details-container">
                            <div class="request-header">
                                Total requests succeed
                            </div>
                            <div id="total_requests_succeed" class="request-data-number">
                                0
                            </div>
                        </div>

                        <div class="request-details-container">
                            <div class="request-header">
                                Total requests failed
                            </div>
                            <div id="total_requests_failed" class="request-data-number">
                                0
                            </div>
                        </div>
                    </div>
                </div>
                <div class="download-date-chart-container d-flex justify-content-center align-items-center flex-column">
                    <div class="data-bars d-flex justify-content-start align-items-baseline flex-row">
                    </div>
                    <div class="data-bar-buttons d-flex justify-content-center align-items-end flex-row">
                        <button id="zoomin-btn" class="zoom-button">+</button>
                        <button id="zoomout-btn" class="zoom-button">-</button>
                    </div>
                </div>
            </div>
            <br><br><br>
            <div class="devicesContainer d-flex align-items-center justify-content-center flex-column p-5">
                <h2 class="text-start">Devices Using Your Access Token :</h2>

            </div>
        </section>
    </main>

    <div class="message-pop dis-none">
        <div class="cross-btn-container">
            <button type="button" class="cross-btn">✗</button>
        </div>
        <div class="message-pop-inner-container">
            <div class="head">Uh oh!</div>
            <div class="message"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous">
        </script>
    <script nonce="<%= nonce %>">
        const hostURL = 'http://localhost:5000'

        const menu_btn_respo = document.querySelector('.menu-btn-respo');
        const responsive_nav_bar = document.querySelector('.responsive-nav-bar');
        const responsive_nav_bar_container = document.querySelector('.responsive-nav-bar-container');

        if (menu_btn_respo) {
            menu_btn_respo.onclick = (e) => {
                if (responsive_nav_bar.style.display === 'none') {
                    responsive_nav_bar.style.display = 'flex';
                    responsive_nav_bar.style.top = '45px'
                    responsive_nav_bar_container.style.display = 'block';
                }
                else {
                    responsive_nav_bar.style.display = 'none';
                    responsive_nav_bar.style.top = '-9000px'
                    responsive_nav_bar_container.style.display = 'none';
                }
            }
        }

        const input = document.querySelector('.capy-input-container input');
        const generate_btn = document.getElementById('generate-btn');
        const copy_btn = document.querySelector('.copy-btn');

        if (copy_btn) {
            copy_btn.onclick = (e) => {
                input.select();
                document.execCommand("copy");
                alert("Copied to clipboard!");
            }
        }


        function addColorClassToAnchor() {
            const anchors = document.querySelectorAll('.navbar-list a');
            const currentUrl = window.location.pathname;

            anchors.forEach(anchor => {
                if (anchor.getAttribute('href') === currentUrl) {
                    anchor.classList.add('color-orange');
                }
            });
        }

        document.addEventListener('DOMContentLoaded', addColorClassToAnchor);
        document.addEventListener('DOMContentLoaded', getRequestData)
        document.addEventListener('DOMContentLoaded', getRequestsRecordData);
        document.addEventListener('DOMContentLoaded', getAccessTokenUsers);

        const message_pop = document.querySelector('.message-pop');
        const cross_btn = document.querySelector('.cross-btn');

        if (cross_btn) {
            cross_btn.addEventListener('click', (e) => {
                if (message_pop) { message_pop.classList.add('dis-none') }
            });
        }

        function show_message_pop(bool, msg = '') {
            if (bool) {
                message_pop.classList.remove('dis-none');
                const message = document.querySelector('.message');
                message.textContent = msg;
            }
            else {
                message_pop.classList.add('dis-none');
            }
        }


        async function getRequestData() {
            try {
                await fetch(`${hostURL}/api/v1/user/getTotalRequestsRecord`)
                    .then((res) => res.json())
                    .then((res) => {
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            }
                            else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }

                        const { totalRequests, succeedRequests, failedRequests } = res.data;
                        show_data_on_board(totalRequests, succeedRequests, failedRequests);

                    })
            } catch (error) {
                show_message_pop(
                    true,
                    "Error on fetching request records."
                );
                console.log(error);
            }
        }


        function show_data_on_board(totalRequests, succeedRequests, failedRequests) {
            const total_requests_sent = document.getElementById('total_requests_sent');
            const total_requests_failed = document.getElementById('total_requests_failed');
            const total_requests_succeed = document.getElementById('total_requests_succeed');

            if (total_requests_failed && total_requests_sent && total_requests_succeed) {
                total_requests_sent.textContent = totalRequests;
                total_requests_failed.textContent = failedRequests;
                total_requests_succeed.textContent = succeedRequests;

                // Calculate the percentage and display it.
                var percentage = Math.floor((succeedRequests / totalRequests) * 100);
                document.querySelector('.meter').setAttribute('meter-level', `${percentage}%`);
                document.documentElement.style.setProperty('--meter-level-percentage', percentage + '%');

                if (percentage >= 10) {
                    document.documentElement.style.setProperty('--meter-shine-level', '11%');
                }
            }
        }

        // Zoom in and out button
        const zoomin = document.getElementById('zoomin-btn');
        const zoomout = document.getElementById('zoomout-btn');

        if (zoomin && zoomout) {
            zoomin.onclick = (e) => {
                set_Single_Bar_Width('increase', 10);
            }

            zoomout.onclick = (e) => {
                set_Single_Bar_Width('decrease', 10);
            }
        }

        function set_Single_Bar_Width(operation = 'increase', by) {
            let style = getComputedStyle(document.documentElement);
            let size = style.getPropertyValue('--single-bar-size').trim();
            let number = Number(size.match(/\d+\.?\d*/g));

            if (number < 100 && operation === 'increase') {
                document.documentElement.style.setProperty('--single-bar-size', `${number += by}px`);
                return;
            }
            else if (number > 10 && operation === 'decrease') {
                document.documentElement.style.setProperty('--single-bar-size', `${number -= by}px`);
                return;
            }
        }


        function populateBars(data) {
            const data_bars = document.querySelector('.data-bars');

            for (const key in data) {
                if (Object.hasOwnProperty.call(data, key)) {
                    const value = data[key];
                    const single_bar = document.createElement('div');
                    single_bar.classList.add('single-bar');
                    single_bar.style.height = `${10 * value.request}px`;
                    single_bar.setAttribute('data-toggle', 'tooltip');
                    single_bar.title = `req:${value.request}, ${key}`

                    data_bars.append(single_bar);
                }
            }
        }


        async function getRequestsRecordData() {
            try {
                await fetch(`${hostURL}/api/v1/user/getRequestsRecordData`)
                    .then((res) => res.json())
                    .then((res) => {
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            }
                            else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }
                        populateBars(res.data);
                    })
            } catch (error) {
                show_message_pop(
                    true,
                    "Error on fetching request records data."
                );
                console.log(error);
            }
        }


        async function getAccessTokenUsers() {
            try {
                await fetch(`${hostURL}/api/v1/user/getAccessTokenUsers`)
                    .then((res) => res.json())
                    .then((res) => {
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            }
                            else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }
                        populateDevicesContainer(res.data);
                    })
            } catch (error) {
                show_message_pop(
                    true,
                    "Error on fetching access token users."
                );
                console.log(error);
            }
        }


        function populateDevicesContainer(devices) {
            const devicesContainer = document.querySelector('.devicesContainer');

            devices.forEach((device) => {
                const device_name = document.createElement('div');
                device_name.classList.add('device-detail-box');

                const html = `
                    <div class="device-name">
                        <span>Device Name :</span>
                    <div class="user-device">${device.deviceType}</div>
                    </div>
                    <div class="os_name">
                        <span>OS Name :</span>
                    <div class="user-os-name">${device.OS_Name}</div>
                    </div>
                `
                device_name.innerHTML = html;
                devicesContainer.append(device_name);
            })
        }

        // Logout-btn
        const logout_btn = document.querySelectorAll('.logout-btn button');

        if (logout_btn.length > 0) {
            logout_btn.forEach(e => {
                e.onclick = async (e) => {
                    console.log('logout button clicked! in logout button cb');
                    await logout();
                }
            });
        }

        async function logout() {
            try {
                const parameter = {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    }
                }

                await fetch(`${hostURL}/api/v1/user/signout`, parameter)
                    .then((res) => res.json())
                    .then((res) => {
                        if (res.error) {
                            if (res.error.constructor === Array) {
                                show_message_pop(true, res.error[0].msg);
                                return;
                            } else {
                                show_message_pop(true, res.error.msg);
                                return;
                            }
                        }

                        location.href = '/'
                    })
                    .catch((error) => {
                        show_message_pop(true, "Error on reading response from server.");
                    })
            } catch (error) {
                show_message_pop(
                    true,
                    "Error on sending request to logout."
                );
                console.log(error);
            }
        }

    </script>
</body>

</html>